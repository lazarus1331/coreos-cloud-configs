#cloud-config for multiple nodes which create and join a consul cluster
---
coreos:
  etcd2:
    discovery: https://discovery.etcd.io/<token>
    advertise-client-urls: http://$public_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
    listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001

  units:
  - name: etcd2.service
    command: start
  - name: fleet.service
    command: start

  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target

  - name: consul.service
    command: start
    content: |
      [Unit]
      Description=Consul Server Agent
      After=docker.service
      After=etcd2.service
      [Service]
      EnvironmentFile=/etc/environment
      Environment=GOMAXPROCS=2
      Restart=on-failure
      RestartSec=60
      ExecStartPre=/usr/bin/docker pull progrium/consul
      ExecStartPre=-/usr/bin/docker kill consul
      ExecStartPre=-/usr/bin/docker rm consul
      ExecStart=/bin/sh -c "eval $(docker run \
        progrium/consul \
        cmd:run $private_ipv4 )"
      ExecStop=/usr/bin/docker stop consul

  - name: consul-announce.service
    command: start
    content: |
      [Unit]
      Description=Consul Server Announcer
      PartOf=consul.service
      After=consul.service
      [Service]
      EnvironmentFile=/etc/environment
      ExecStart=/bin/sh -c "while true; do etcdctl set /consul/bootstrap/machines/$(cat /etc/machine-id) $private_ipv4 --ttl 60; \
        /usr/bin/docker exec consul consul join $(etcdctl get $(etcdctl ls /consul/bootstrap/machines | tail -1)); sleep 45; done"
      ExecStop=/bin/sh -c "/usr/bin/etcdctl rm /consul/bootstrap/machines/$(cat /etc/machine-id)"

  - name: registrator.service
    runtime: true
    command: start
    content: |
      [Unit]
      Description=Registrator
      After=consul.service
      Requires=consul.service
      [Service]
      Restart=always
      RestartSec=60
      ExecStartPre=/usr/bin/docker pull gliderlabs/registrator:latest
      ExecStartPre=-/usr/bin/docker kill registrator
      ExecStartPre=-/usr/bin/docker rm registrator
      ExecStart=/bin/sh -c "/usr/bin/docker run \
        --name registrator \
        --net host \
        -v /var/run/docker.sock:/tmp/docker.sock \
        gliderlabs/registrator:latest \
        consul://$private_ipv4:8500"
      ExecStop=/usr/bin/docker rm -f registrator
